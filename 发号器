背景
  为了给业务提供唯一号码服务
常用方案
  1.UUID 方案
  优势：本地生成;减少网络传输
  略势：长度太长不利于存储;不利于数据库作为主键使用(数据库主键要求简短)
  2.DB 自增方案
  优势：单调自增;易于维护;
  略势：强依赖数据库，不利于水平拓展;会有性能瓶颈;
  3.SnowFlake 
  优势：毫秒在高位，自增在低位，中间位数可以增加业务特性
  略势：依赖机器时钟，时钟出问题会影响发号

新方案
  数据库+SnowFlake 方案
  1.数据库服务出现问题的情况下(所有DB服务不可用)，退化成Snowflake方案
  2.每个服务实例可以对应多个DB(例如：2个),golang可以通过每个goroutine对应1个数据库实例（字段中标识IDC,不同IDC号段不同）
  3.goroutine每次取1w个号码更新一次数据库，将数据缓存在内存中
  4.每次取号结束之后检查池子里面剩余号码个数，低于阈值的时候，去数据库取一次
  5.DB异常的情况下，服务仍可以提供一段时间服务，不会立即退化成snowflake方案
  符号位+方案(db/snowflake)+TimeStamp+机房信息+自增
